# Generated by Django 4.2.5 on 2023-10-20 01:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('task_ticket', models.CharField(editable=False, max_length=100, unique=True)),
                ('task_title', models.CharField(max_length=200)),
                ('task_description', models.TextField()),
                ('task_customer', models.CharField(max_length=200)),
                ('task_is_external', models.BooleanField()),
                ('task_denied_motive', models.TextField()),
                ('task_has_validated', models.BooleanField(default=False)),
                ('task_is_accepted', models.BooleanField(default=False)),
                ('task_deadline', models.DateTimeField()),
                ('task_has_done', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task_author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_author', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task_Category',
            fields=[
                ('category_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category_description', models.CharField(max_length=100)),
                ('category_is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task_Priority',
            fields=[
                ('task_priority_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('task_priority_description', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task_Status',
            fields=[
                ('task_status_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('task_status_description', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task_Status_Sector',
            fields=[
                ('id', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_users.sector')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task_status')),
            ],
        ),
        migrations.CreateModel(
            name='Task_Comment',
            fields=[
                ('task_comment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task_comment_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='comment_author')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task')),
            ],
        ),
        migrations.CreateModel(
            name='Task_Category_Sector',
            fields=[
                ('id', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task_category')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_users.sector')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='task_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task_category'),
        ),
        migrations.AddField(
            model_name='task',
            name='task_priority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task_priority'),
        ),
        migrations.AddField(
            model_name='task',
            name='task_responsible',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_responsible', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='task_sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_users.sector'),
        ),
        migrations.AddField(
            model_name='task',
            name='task_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task_status'),
        ),
    ]
